name: CI-stage

on:
  push:
    branches:
      - develop

env:
  DOCKER_HUB_NAME: "tss45elcity"
  DOCKER_HUB_REPOSITORY: "repo_1"
  TAG: "hello_ci_cd_test_golang_v1"
  FULL_NAME_IMAGE_FOR_DOCKERHUB: $(echo $DOCKER_HUB_NAME)/$(echo $DOCKER_HUB_REPOSITORY):$(echo $TAG)
jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Unit Tests
        run: make test


  build_and_push:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: tss45elcity/repo_1
      
      #- name: Build docker container
      #  run: make docker_build
      
      #- name: Push docker container
      #  run: make docker_push
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          tags: $(echo $FULL_NAME_IMAGE_FOR_DOCKERHUB)
          context: .
          push: true
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}
        

  deploy:
    environment: stage
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.SSHKEY }}
          source: "deploy/"
          target: "api"
          strip_components: 1

      - name: Deploy to remote server via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.SSHKEY }}
          script: |
            # Run a new container from a new image
            cd api
            docker-compose -f docker-compose.yml stop
            docker-compose -f docker-compose.yml rm -f
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d --force-recreate ci_cd_golang
